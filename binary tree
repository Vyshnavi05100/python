class Node:
    def __init__(self,data):
        self.data=data
        self.left=self.right=None
        
def inorder_traversal(root):
    if root is None:
        return
    inorder_traversal(root.left)
    print(root.data,end=" ")
    inorder_traversal(root.right)

def preorder_traversal(root):
    if root is None:
        return
    print(root.data,end=" ")
    preorder_traversal(root.left)
    preorder_traversal(root.right)
    
def postorder_traversal(root):
    if root is None:
        return
    postorder_traversal(root.left)
    postorder_traversal(root.right)
    print(root.data,end=" ")
    
root=Node(5)
root.left=Node(6)
root.right=Node(12)
root.left.left=Node(10)
root.left.right=Node(33)
root.right.right=Node(3)
root.left.left.left=Node(56)
inorder_traversal(root)
print()
preorder_traversal(root)
print()
postorder_traversal(root)

Output:

56 10 6 33 5 12 3 
5 6 10 56 33 12 3 
56 10 33 6 3 12 5 
